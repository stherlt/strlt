<button id="themeToggle">
  <svg xmlns="http://www.w3.org/2000/svg" width="2.5em" height="2.5em" viewBox="0 0 256 256"><path class = "crescent" fill="currentColor" d="M237.94 107.21a8 8 0 0 0-3.89-5.4l-29.83-17l-.12-33.62a8 8 0 0 0-2.83-6.08a111.91 111.91 0 0 0-36.72-20.67a8 8 0 0 0-6.46.59L128 41.85L97.88 25a8 8 0 0 0-6.47-.6a111.92 111.92 0 0 0-36.68 20.75a8 8 0 0 0-2.83 6.07l-.15 33.65l-29.83 17a8 8 0 0 0-3.89 5.4a106.47 106.47 0 0 0 0 41.56a8 8 0 0 0 3.89 5.4l29.83 17l.12 33.63a8 8 0 0 0 2.83 6.08a111.91 111.91 0 0 0 36.72 20.67a8 8 0 0 0 6.46-.59L128 214.15L158.12 231a7.91 7.91 0 0 0 3.9 1a8.09 8.09 0 0 0 2.57-.42a112.1 112.1 0 0 0 36.68-20.73a8 8 0 0 0 2.83-6.07l.15-33.65l29.83-17a8 8 0 0 0 3.89-5.4a106.47 106.47 0 0 0-.03-41.52M128 168a40 40 0 1 1 40-40a40 40 0 0 1-40 40"/></svg>
<style>
  #themeToggle {
    position: fixed;
    border: 0;
    background: none;
    top: 1.7rem;
    left: 40px;
    transition: transform 0.3s ease;
  }

  .crescent {
    
    stroke: black;
    fill: black
    stroke-width: 1px;
    transform-origin: center;
    
    transition: stroke-width 0.3s ease; /* Transition for stroke width change */
  }
  .crescent:hover {
    stroke-width: 3px;
    scale: 1.1;
    transform-origin: center; 
    transform: rotate(90deg);
    transition: transform 0.3s ease;
  }
  .crescent:not(:hover) {
    stroke-width: 1px;
    transform-origin: center; 
    transform: rotate(0deg);
    transition: transform 0.3s ease;
  }
  .crescent:active {
    
    opacity: 0.7;
    stroke-width: 3px;
    
    
    
  }

:global(.dark) .crescent {
  stroke: white;
  fill: white;
  
  
  
}

:global(.light) .crescent {
  stroke: black;
  ;
  stroke-width: 2px;
  transform-origin: center; 
  transform: rotate(90deg);
  transition: transform 0.3s ease;
}


  /* Apply animation on click */
  #themeToggle.clicked .crescent {
    animation: animateCrescent 0.5s ease;
  }
</style>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    element.classList.toggle("clicked"); // Toggle clicked class

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
  
</script>
